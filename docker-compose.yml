version: "3.8"

services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: weather
    ports:
      - 5432:5432
    volumes:
      - ../environment:/docker-entrypoint-initdb.d
    networks:
      - weather-network


  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8.0-debian-11-r37
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - weather-network

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.1.0-debian-10-r106
    ports:
      - 9092:9093
      - 9093:9093
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      KAFKA_LOG_DIR: /opt/bitnami/kafka/logs
    volumes:
      - kafka_data:/bitnami
    networks:
      - weather-network


  weather:
    container_name: weather
    image: weather:latest
    depends_on:
      - postgres
      - kafka
    ports:
      - 8081:8080
    networks:
      - weather-network

  bot:
    container_name: bot
    image: bot:latest
    user: root
    depends_on:
      - kafka
    ports:
      - 8082:8080
    networks:
      - weather-network

networks:
  weather-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local